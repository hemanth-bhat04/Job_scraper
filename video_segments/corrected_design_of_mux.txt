yes ma'am, okay. So, in the previous session, we saw the importance of boolean algebra and how boolean algebra is used to design any digital circuits. So, we'll continue with that. In today's session, we will be discussing about combinational logic circuits. To design these combinational logic circuits, we will be using the logic gates that we have discussed in the previous session on the boolean algebra topic. In boolean algebra, we discussed the boolean operators, and for each of the boolean operators, we designed the basic gates â€“ the and gate, or gate, and not gate. Using these gates, we have also designed the derived gates, namely, the nand gate, nor gate, xor gate, and xnor gate. Now, using all these logics, we'll see how we can design a combinational logic circuit. Essentially, all these combinational logic circuits are designed using the logic gates that we have studied in the previous session. Logic gates were designed to implement the boolean operators, which were, of course, and and or not and so on. All these operators function within the digital number binary number system. All the processing that takes place inside a digital circuit is with respect to logic zero and logic one. For this binary number system, the basic operators that we defined are called boolean operators, which are and, or, and not. To implement these operators, we designed your basic gates, which were basically executed using transistors. Because transistors work with logic zero and logic one levels only, those two levels were enough to depict the performance of all digital circuits. That's why they introduced a new format of the number system, which is called the binary number system. In today's session, we'll progress and discuss how to design a combinational logic circuit using all the basic gates that we have studied. Learning objectives. By the end of the session, you should be able to describe the procedure used to design any combinational logic circuit, design a combinational logic circuit with a given specification, describe the functionality of a multiplexer, and implement any logic function using a multiplexer circuit. So, let's start with combinational logics.